# This is a basic workflow to help you get started with Actions.

name: Deploy

# Controls when the workflow will run.

  # Triggers the workflow on push or pull request events but only for the main branch
on: 
  # push:
  #   branches: [ "prototype" ]

    # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  Build:
    # environment: testing-env
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup Job
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update
          sudo apt install -y terraform=1.0.11
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && unzip awscliv2.zip
          sudo ./aws/install

      - name: Deploy VPC
        working-directory: ${{ github.workspace }}
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}
          export TF_VAR_aws_account=${{ secrets.AWS_ACCOUNT }}
          export TF_VAR_aws_key=${{ secrets.spin_aws_key }}
          export TF_VAR_aws_secret=${{ secrets.spin_aws_secret }}
          export TF_VAR_aws_region=${{ secrets.spin_aws_region }}
          export TF_VAR_spinnaker_github_org=${{ secrets.SPINNAKER_GITHUB_ORG }}
          export TF_VAR_spinnaker_github_repo=${{ secrets.SPINNAKER_GITHUB_REPO }}
          export TF_VAR_github_pat=${{ secrets.spin_github_pat }}
          terraform init
          terraform apply -target=module.infra.module.vpc -auto-approve
          terraform apply -target=module.infra.aws_security_group.ALB_SG -target=module.infra.aws_security_group.worker_node_sg -target=module.infra.aws_security_group.database_sg -auto-approve
      
      - name: Deploy EKS Cluster
        working-directory: ${{ github.workspace }}
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}
          export TF_VAR_aws_account=${{ secrets.AWS_ACCOUNT }}
          export TF_VAR_aws_key=${{ secrets.spin_aws_key }}
          export TF_VAR_aws_secret=${{ secrets.spin_aws_secret }}
          export TF_VAR_aws_region=${{ secrets.spin_aws_region }}
          export TF_VAR_spinnaker_github_org=${{ secrets.SPINNAKER_GITHUB_ORG }}
          export TF_VAR_spinnaker_github_repo=${{ secrets.SPINNAKER_GITHUB_REPO }}
          export TF_VAR_github_pat=${{ secrets.spin_github_pat }}
          terraform apply -target=module.infra.module.eks -auto-approve

# If you want a DB, uncomment this job, the Bastion job, and the database and bastion tf files then add the config to Spinnaker
# see https://github.com/armory-io/customer-training-envs/blob/main/terraform/Spinnaker-config.tf for how to add it. 

      # - name: Deploy Aurora DB
      #   working-directory: ${{ github.workspace }}
      #   run: |
      #     export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
      #     export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}
      #     export TF_VAR_aws_account=${{ secrets.AWS_ACCOUNT }}
      #     export TF_VAR_aws_key=${{ secrets.spin_aws_key }}
      #     export TF_VAR_aws_secret=${{ secrets.spin_aws_secret }}
      #     export TF_VAR_aws_region=${{ secrets.spin_aws_region }}
      #     export TF_VAR_spinnaker_github_org=${{ secrets.SPINNAKER_GITHUB_ORG }}
      #     export TF_VAR_spinnaker_github_repo=${{ secrets.SPINNAKER_GITHUB_REPO }}
      #     export TF_VAR_github_pat=${{ secrets.spin_github_pat }}
      #     terraform apply -target=module.infra.module.cluster -auto-approve


      - name: Generate Kubeconfig
        working-directory: ${{ github.workspace }}
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}
          aws eks update-kubeconfig --name oss-cluster --region $AWS_DEFAULT_REGION --kubeconfig oss-kconfig
      
      # - name: Upload kconfig
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: oss-kconfig
      #     path: ${{ github.workspace }}/oss-kconfig
      #     retention-days: 30

      - name: Deploy everything else
        working-directory: ${{ github.workspace }}
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}
          export TF_VAR_aws_account=${{ secrets.AWS_ACCOUNT }}
          export TF_VAR_aws_key=${{ secrets.spin_aws_key }}
          export TF_VAR_aws_secret=${{ secrets.spin_aws_secret }}
          export TF_VAR_aws_region=${{ secrets.spin_aws_region }}
          export TF_VAR_spinnaker_github_org=${{ secrets.SPINNAKER_GITHUB_ORG }}
          export TF_VAR_spinnaker_github_repo=${{ secrets.SPINNAKER_GITHUB_REPO }}
          export TF_VAR_github_pat=${{ secrets.spin_github_pat }} 
          terraform apply -auto-approve
          terraform apply -refresh-only -auto-approve


## Bastion shutdown job if using SQL
      # - name: Shutdown Bastion
      #   run: |
      #     export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
      #     export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}
      #     aws ec2 terminate-instances --region $AWS_DEFAULT_REGION --instance-ids $(aws ec2 describe-instances --query 'Reservations[].Instances[].InstanceId' --filters "Name=tag:Name,Values=oss-bastion" "Name=instance-state-code,Values=16" --output text)| tr '\n' ' '

  Deploy:
    needs: Build
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup Job
        working-directory: ${{ github.workspace }}
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update
          sudo apt install -y terraform=1.0.11
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && unzip awscliv2.zip
          sudo ./aws/install
      
      # - name: Pull kubeconfig
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: oss-kconfig
      #     path: ${{ github.workspace }}

      - name: Generate Kubeconfig
        working-directory: ${{ github.workspace }}
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}
          aws eks update-kubeconfig --name oss-cluster --region $AWS_DEFAULT_REGION --kubeconfig oss-kconfig

      - name: Deploy Operator
        working-directory: ${{ github.workspace }}
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}
          mkdir -p ${{ github.workspace }}/spinnaker-operator
          cd ${{ github.workspace }}/spinnaker-operator
          bash -c "curl -L https://github.com/armory/spinnaker-operator/releases/download/v1.2.5/manifests.tgz | tar -xz"
          kubectl --kubeconfig ${{ github.workspace }}/oss-kconfig apply -f ${{ github.workspace }}/spinnaker-operator/deploy/crds/
          kubectl --kubeconfig ${{ github.workspace }}/oss-kconfig -n spinnaker-operator apply -f ${{ github.workspace }}/spinnaker-operator/deploy/operator/cluster

      - name: Build Spinnaker ServiceManifest
        working-directory: ${{ github.workspace }}
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}
          export TF_VAR_aws_account=${{ secrets.AWS_ACCOUNT }}
          export TF_VAR_aws_key=${{ secrets.spin_aws_key }}
          export TF_VAR_aws_secret=${{ secrets.spin_aws_secret }}
          export TF_VAR_aws_region=${{ secrets.spin_aws_region }}
          export TF_VAR_spinnaker_github_org=${{ secrets.SPINNAKER_GITHUB_ORG }}
          export TF_VAR_spinnaker_github_repo=${{ secrets.SPINNAKER_GITHUB_REPO }}
          export TF_VAR_github_pat=${{ secrets.spin_github_pat }}
          terraform init
          terraform apply -target=module.infra.local_file.ServiceManifest -auto-approve

      - name: Deploy Spinnaker
        working-directory: ${{ github.workspace }}
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}
          kubectl --kubeconfig ${{ github.workspace }}/oss-kconfig apply -f ${{ github.workspace }}/spinnaker/SpinnakerService.yml